#include <iostream>
using namespace std;

struct node {
  int data;
  node* left;
  node* right;
};

class binary_tree {
  public:
    node* root;
    bool isempty();
    void insert(int);
    void inorder(node *);
    void preorder(node *);
    void postorder(node *);
};


bool binary_tree::isempty() {
  return root == NULL;
}

void binary_tree::insert(int data) {
  node* newnode = new node;
  newnode->data = data;
  newnode->left = NULL;
  newnode->right = NULL;
  node* parent = NULL;

  if(isempty()) {
    root = newnode;
    return;
  }

  node* temp = root;
  parent = temp;
  while(temp != NULL) {
    if(data < temp->data) 
      temp = temp->left;
    else 
      temp = temp->right;
  }

  if(data < parent->data) 
    parent->left = newnode;
  else
    parent->right = newnode;
}

void binary_tree::inorder(node *n) {
  if(n != NULL) {
    inorder(n->left);
    printf("%d ", n->data);
    inorder(n->right);
  }
}

void trees() {
  binary_tree *b;
  b->insert(1);
  b->insert(2);
  b->insert(3);
  b->insert(4);
  b->insert(5);
  b->insert(6);

  b->inorder(b->root);
}
